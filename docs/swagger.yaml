openapi: 3.0.0
info:
  title: API de l'application Service locaux (Client, Prestataire, Admin)
  version: 1.0.0
  description: >
    Documentation complète de l'API pour gérer les utilisateurs, services, demandes de services, et rôles.
servers:
  - url: http://localhost:5000
    description: Serveur local
  - url: https://backendtache21.onrender.com
    description: Serveur déployé
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []

paths:
  ### Utilisateurs ###
  
  /api/utilisateurs/connexion:
    post:
      summary: Connexion d'un utilisateur
      tags:
        - Utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - mot_de_passe
              properties:
                email:
                  type: string
                  description: Email de l'utilisateur.
                mot_de_passe:
                  type: string
                  description: Mot de passe de l'utilisateur.
      responses:
        200:
          description: Connexion réussie.
        401:
          description: Email ou mot de passe invalide.

### Clients###

  /api/clients/inscription-client:
    post:
      summary: Inscription d'un nouveau client
      description: Permet à un utilisateur de s'inscrire en tant que client.
      tags:
        - Clients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  example: "Dupont"
                prenom:
                  type: string
                  example: "Jean"
                email:
                  type: string
                  example: "jean.dupont@example.com"
                motDePasse:
                  type: string
                  example: "MotDePasse123!"
      responses:
        201:
          description: Client inscrit avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Client inscrit avec succès."
                  client:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "65b1a2c34e5f7a1234567890"
                      nom:
                        type: string
                        example: "Dupont"
                      prenom:
                        type: string
                        example: "Jean"
                      email:
                        type: string
                        example: "jean.dupont@example.com"
                      role:
                        type: string
                        example: "client"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR..."

        400:
          description: Un client avec cet email existe déjà.
        500:
          description: Erreur interne du serveur.

  /api/clients/profil-client:
    get:
      summary: Récupérer les informations du client connecté
      description: Retourne les informations du client en fonction du token JWT.
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        200:
          description: Détails du client récupérés avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "65b1a2c34e5f7a1234567890"
                  nom:
                    type: string
                    example: "Dupont"
                  prenom:
                    type: string
                    example: "Jean"
                  email:
                    type: string
                    example: "jean.dupont@example.com"
                  role:
                    type: string
                    example: "client"

        401:
          description: Accès refusé, token manquant ou invalide.
        404:
          description: Client non trouvé.

  /api/clients/mettre-a-jour-client:
    put:
      summary: Mettre à jour les informations du client
      description: Permet au client de modifier ses informations personnelles.
      tags:
        - Clients
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  example: "Dupont"
                prenom:
                  type: string
                  example: "Jean"
                email:
                  type: string
                  example: "jean.dupont@example.com"
      responses:
        200:
          description: Informations mises à jour avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Informations du client mises à jour avec succès."
                  client:
                    type: object
                    properties:
                      nom:
                        type: string
                        example: "Dupont"
                      prenom:
                        type: string
                        example: "Jean"
                      email:
                        type: string
                        example: "jean.dupont@example.com"

        401:
          description: Accès refusé, token manquant ou invalide.
        404:
          description: Client non trouvé.
        500:
          description: Erreur interne du serveur.

  /api/clients/liste-clients:
    get:
      summary: Liste de tous les clients (Admin uniquement)
      description: Permet à l'admin de voir tous les clients inscrits.
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des clients récupérée avec succès.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "65b1a2c34e5f7a1234567890"
                    nom:
                      type: string
                      example: "Dupont"
                    prenom:
                      type: string
                      example: "Jean"
                    email:
                      type: string
                      example: "jean.dupont@example.com"
                    role:
                      type: string
                      example: "client"

        401:
          description: Accès refusé, token manquant ou invalide.
        403:
          description: Accès interdit (rôle insuffisant).
        500:
          description: Erreur interne du serveur.



### Prestataires ###

  /api/prestataires/inscription-prestataire:
    post:
      summary: Inscription d'un nouveau prestataire
      tags:
        - Prestataires
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nom
                - prenom
                - email
                - telephone
                - motDePasse
                - nomDeLentreprise
                - region
                - departement
              properties:
                nom:
                  type: string
                  description: Nom du prestataire.
                prenom:
                  type: string
                  description: Prénom du prestataire.
                email:
                  type: string
                  format: email
                  description: Adresse email unique du prestataire.
                telephone:
                  type: string
                  description: Numéro de téléphone du prestataire.
                motDePasse:
                  type: string
                  format: password
                  description: Mot de passe sécurisé.
                nomDeLentreprise:
                  type: string
                  description: Nom de l'entreprise du prestataire.
                region:
                  type: string
                  description: Région du prestataire.
                departement:
                  type: string
                  description: Département du prestataire.
                description:
                  type: string
                  description: Description des services du prestataire.
      responses:
        201:
          description: Inscription réussie.
        400:
          description: L'email est déjà utilisé.
        500:
          description: Erreur interne du serveur.

  /api/prestataires/profil-prestataire:
    get:
      summary: Récupérer le profil du prestataire connecté
      tags:
        - Prestataires
      security:
        - bearerAuth: []
      responses:
        200:
          description: Profil récupéré avec succès.
        404:
          description: Prestataire non trouvé.
        500:
          description: Erreur interne du serveur.

  /api/prestataires/mettre-a-jour-prestataire:
    put:
      summary: Modifier le profil du prestataire connecté
      tags:
        - Prestataires
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
                telephone:
                  type: string
                nomDeLentreprise:
                  type: string
                region:
                  type: string
                departement:
                  type: string
                description:
                  type: string
                motDePasse:
                  type: string
                  format: password
      responses:
        200:
          description: Profil mis à jour avec succès.
        404:
          description: Prestataire non trouvé.
        500:
          description: Erreur interne du serveur.

  /api/prestataires/liste-prestataires:
    get:
      summary: Lister tous les prestataires
      tags:
        - Prestataires
      responses:
        200:
          description: Liste des prestataires récupérée avec succès.
        500:
          description: Erreur interne du serveur.

  /api/prestataires/demandes/{demandeId}:
    delete:
      summary: Supprimer une demande de réservation par le prestataire concerné
      tags:
        - Prestataires
      security:
        - bearerAuth: []
      parameters:
        - name: demandeId
          in: path
          required: true
          schema:
            type: string
          description: Identifiant de la demande de réservation à supprimer.
      responses:
        200:
          description: Demande supprimée avec succès.
        403:
          description: Accès interdit.
        404:
          description: Demande non trouvée.
        500:
          description: Erreur interne du serveur.


 ### Services ###

  /api/services/ajouter:
    post:
      summary: Ajouter un nouveau service
      tags:
        - Services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - nomDeservice
                - categorie
                - descriptionDeService
              properties:
                nomDeservice:
                  type: string
                  description: Nom du service proposé.
                categorie:
                  type: string
                  description: Catégorie du service.
                descriptionDeService:
                  type: string
                  description: Description détaillée du service.
                imageService:
                  type: string
                  format: binary
                  description: Image illustrant le service.
                imageDiplomes:
                  type: string
                  format: binary
                  description: Image des diplômes ou certifications éventuelles.
      responses:
        201:
          description: Service ajouté avec succès.
        400:
          description: Données manquantes ou invalides.
        500:
          description: Erreur interne du serveur.

  /api/services/tous-les-services:
    get:
      summary: Obtenir la liste de tous les services avec leurs prestataires
      tags:
        - Services
      responses:
        200:
          description: Liste des services récupérée avec succès.
        500:
          description: Erreur lors de la récupération des services.

  /api/services/{id}:
    get:
      summary: Obtenir les détails d'un service spécifique
      tags:
        - Services
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du service à récupérer.
      responses:
        200:
          description: Détails du service récupérés avec succès.
        400:
          description: ID invalide.
        404:
          description: Service non trouvé.
        500:
          description: Erreur interne du serveur.

### Demande de Service ###

  /api/demandes-services/demande:
    post:
      summary: Créer une demande de service et l'envoyer à un prestataire
      tags:
        - Demande de Service
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - typeService
                - numeroTelephone
                - descriptionAdresse
                - date
                - prestataireId
              properties:
                typeService:
                  type: string
                  description: Type de service demandé.
                numeroTelephone:
                  type: string
                  description: Numéro de téléphone du client.
                descriptionAdresse:
                  type: string
                  description: Adresse et description du lieu d'intervention.
                date:
                  type: string
                  format: date
                  description: Date prévue pour la prestation.
                prestataireId:
                  type: string
                  description: Identifiant du prestataire cible.
      responses:
        201:
          description: Demande de service créée et envoyée avec succès.
        400:
          description: Données manquantes ou invalides.
        404:
          description: Prestataire non trouvé ou rôle invalide.
        500:
          description: Erreur interne du serveur.

  /api/demandes-services/client:
    get:
      summary: Obtenir les demandes du client connecté
      tags:
        - Demande de Service
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des demandes du client récupérée avec succès.
        500:
          description: Erreur interne du serveur.

  /api/demandes-services/prestataire:
    get:
      summary: Obtenir les demandes du prestataire connecté
      tags:
        - Demande de Service
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des demandes du prestataire récupérée avec succès.
        403:
          description: Accès interdit, l'utilisateur n'est pas un prestataire.
        500:
          description: Erreur interne du serveur.

  /api/demandes-services/{id}/statut:
    put:
      summary: Mettre à jour le statut d'une demande de service
      tags:
        - Demande de Service
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant de la demande à mettre à jour.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - statut
              properties:
                statut:
                  type: string
                  enum: [acceptée, refusée, terminée]
                  description: Nouveau statut de la demande.
      responses:
        200:
          description: Statut de la demande mis à jour avec succès.
        400:
          description: Statut invalide.
        404:
          description: Demande non trouvée.
        500:
          description: Erreur interne du serveur.

  ### Admin ###

  api/admin/profil:
    get:
      summary: "Récupérer le profil de l'administrateur"
      description: "Permet de récupérer les informations du profil de l'administrateur."
      tags:
        - Admin
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Profil de l'administrateur récupéré avec succès"
          content:
            application/json:
              schema:
                type: object
                properties:
                  administrateur:
                    type: object
                    properties:
                      id:
                        type: string
                      nom:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        404:
          description: "Administrateur non trouvé"
        500:
          description: "Erreur interne du serveur"

  api/admin/modifier-profil:
    put:
      summary: "Modifier le profil de l'administrateur"
      description: "Permet de modifier les informations du profil de l'administrateur."
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                email:
                  type: string
                motDePasse:
                  type: string
      responses:
        200:
          description: "Profil administrateur mis à jour avec succès."
        400:
          description: "Bad Request - Les informations sont invalides."
        500:
          description: "Erreur interne du serveur"

  api/admin/prestataire/bloquer/{idPrestataire}:
    put:
      summary: "Bloquer un compte prestataire"
      description: "Permet de bloquer un prestataire en le désactivant."
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: idPrestataire
          in: path
          description: "ID du prestataire à bloquer"
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Compte prestataire bloqué avec succès."
        404:
          description: "Prestataire non trouvé"
        400:
          description: "Cet utilisateur n'est pas un prestataire"
        500:
          description: "Erreur interne du serveur"

  api/admin/prestataire/debloquer/{idPrestataire}:
    put:
      summary: "Débloquer un compte prestataire"
      description: "Permet de débloquer un prestataire en réactivant son compte."
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: idPrestataire
          in: path
          description: "ID du prestataire à débloquer"
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Compte prestataire débloqué avec succès."
        404:
          description: "Prestataire non trouvé"
        400:
          description: "Cet utilisateur n'est pas un prestataire"
        500:
          description: "Erreur interne du serveur"


  ### Mot de Passe ###

  /api/mot-de-passe/oublie:
    post:
      summary: Demander une réinitialisation de mot de passe
      tags:
        - Mot de Passe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: Adresse email de l'utilisateur pour recevoir le lien de réinitialisation du mot de passe.
      responses:
        200:
          description: Email envoyé avec succès contenant les instructions de réinitialisation.
        404:
          description: Aucun utilisateur trouvé avec cet email.

  /api/mot-de-passe/modifier:
    post:
      summary: Modifier le mot de passe de l'utilisateur
      tags:
        - Mot de Passe
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - codeVerification
                - nouveauMotDePasse
              properties:
                email:
                  type: string
                  format: email
                  description: Adresse email associée au compte.
                codeVerification:
                  type: string
                  description: Code de vérification envoyé par email.
                nouveauMotDePasse:
                  type: string
                  format: password
                  description: Nouveau mot de passe de l'utilisateur.
      responses:
        200:
          description: Mot de passe modifié avec succès.
        400:
          description: Code de vérification incorrect ou validation du mot de passe échouée.
        401:
          description: Utilisateur non authentifié ou session expirée.
