openapi: 3.0.0
info:
  title: API de l'application (Client, Prestataire, Admin)
  version: 1.0.0
  description: >
    Documentation de l'API pour gérer les utilisateurs, services, et rôles.
servers:
  - url: http://localhost:5000
    description: Serveur local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []

paths:
  /api/utilisateurs/inscription:
    post:
      summary: Inscription d'un nouvel utilisateur
      tags:
        - Utilisateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - mot_de_passe
                - nom
              properties:
                email:
                  type: string
                  description: Email de l'utilisateur.
                mot_de_passe:
                  type: string
                  description: Mot de passe de l'utilisateur.
                nom:
                  type: string
                  description: Nom complet de l'utilisateur.
      responses:
        201:
          description: Utilisateur créé avec succès.
        400:
          description: Erreur de validation ou email déjà utilisé.
  /api/utilisateurs/connexion:
    post:
      summary: Connexion d'un utilisateur
      tags:
        - Utilisateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - mot_de_passe
              properties:
                email:
                  type: string
                  description: Email de l'utilisateur.
                mot_de_passe:
                  type: string
                  description: Mot de passe de l'utilisateur.
      responses:
        200:
          description: Connexion réussie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT pour l'utilisateur connecté.
        401:
          description: Email ou mot de passe invalide.
  /api/services/ajouter:
    post:
      summary: Ajouter un service (uniquement pour les prestataires)
      tags:
        - Services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - titre
                - description
                - prix
              properties:
                titre:
                  type: string
                  description: Titre du service.
                description:
                  type: string
                  description: Description détaillée du service.
                prix:
                  type: number
                  description: Prix du service.
      responses:
        201:
          description: Service créé avec succès.
        403:
          description: Accès refusé (non prestataire).
